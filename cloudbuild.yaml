# cloudbuild.yaml
# Cloud Build (Gen-1) config: no-cache docker build, tag with SHORT_SHA and latest,
# push to Artifact Registry, optional on-demand vulnerability scan, and produce an artifact file.

options:
  machineType: "E2_HIGHCPU_8"

steps:
# 1) Build docker image with --no-cache and tag with SHORT_SHA
- name: "gcr.io/cloud-builders/docker"
  args:
    - "build"
    - "--no-cache"
    - "-t"
    - "${_IMAGE_URI}:${SHORT_SHA}"
    - "."

# 2) Tag image also as :latest
- name: "gcr.io/cloud-builders/docker"
  args:
    - "tag"
    - "${_IMAGE_URI}:${SHORT_SHA}"
    - "${_IMAGE_URI}:latest"

# 3) Push both tags
- name: "gcr.io/cloud-builders/docker"
  args:
    - "push"
    - "${_IMAGE_URI}:${SHORT_SHA}"

- name: "gcr.io/cloud-builders/docker"
  args:
    - "push"
    - "${_IMAGE_URI}:latest"

# 4) Optional: on-demand vulnerability scan (may require beta / permissions)
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      set -e
      # Try on-demand scan (if available in your project). If it errors, we continue.
      if gcloud beta artifacts docker images scan "${_IMAGE_URI}:${SHORT_SHA}" --project="${PROJECT_ID}"; then
        echo "Scan request submitted"
      else
        echo "On-demand scan not available or failed; continuing"
      fi

# 5) Write a small artifact (image property) that other systems (Cloud Deploy) can consume
- name: "gcr.io/cloud-builders/gcloud"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      mkdir -p output
      echo "image: ${_IMAGE_URI}:${SHORT_SHA}" > output/image.properties

# Optional artifacts storage (Cloud Build will upload the output/* files to GCS)
artifacts:
  objects:
    location: "gs://${_ARTIFACTS_BUCKET}/cloud-build-artifacts/"
    paths:
      - "output/*"

# Substitutions (these are defaults; set or override them in the trigger UI)
substitutions:
  _IMAGE_NAME: "gke-nodejs-project2"
  _REPO: "gke-nodejs-project2"
  # _IMAGE_URI and _ARTIFACTS_BUCKET should be set in the Cloud Build trigger substitutions
  # Example _IMAGE_URI: asia-south1-docker.pkg.dev/tidy-reporter-474515-a2/asia-south1-docker/gke-nodejs-project2

images:
  - "${_IMAGE_URI}:${SHORT_SHA}"

timeout: "1200s"
